# Copyright 2022, Canonical Ltd.
# See LICENSE file for licensing details

[tox]
envlist = lint, unit
skipsdist = True
sitepackages = False
skip_missing_interpreters = True

[vars]
src_path = {toxinidir}/
tst_path = {toxinidir}/tests/
all_path = {[vars]src_path} {[vars]tst_path}
uv_flags = --frozen --isolated --extra=dev

[testenv]
allowlist_externals =
    uv
setenv = VIRTUAL_ENV={envdir}
         PYTHONHASHSEED=0

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    codespell {toxinidir} --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/venv --skip {toxinidir}/.venv --skip {toxinidir}/cover
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]src_path}
    isort --check-only --diff {[vars]src_path}
    black --check --diff {[vars]src_path}

[testenv:unit]
description = Run unit tests
commands =
    uv run {[vars]uv_flags} coverage erase
    uv run {[vars]uv_flags} coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}integration -v --tb native -s {posargs}
    uv run {[vars]uv_flags} coverage html -d cover
    uv run {[vars]uv_flags} coverage xml -o cover/coverage.xml
    uv run {[vars]uv_flags} coverage report

[testenv:lock]
description = Update lock file
commands =
    uv lock --upgrade --no-cache
