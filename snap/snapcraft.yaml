name: microstack-hypervisor
version: xena
base: core20
summary: OpenStack on your laptop.
description: |
  Microstack gives you an easy way to develop and test OpenStack
  workloads on your laptop.
grade: devel
confinement: strict
environment:
  LC_ALL: C
  PATH: $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$SNAP/usr/local/bin:$SNAP/usr/local/sbin:$PATH
  # Standard library components must have priority in module name resolution: https://storyboard.openstack.org/#!/story/2007806
  PYTHONPATH: $PYTHONPATH:/usr/lib/python3.8:/usr/lib/python3/dist-packages:$SNAP/usr/lib/python3.8:$SNAP/lib/python3.8/site-packages:$SNAP/usr/lib/python3/dist-packages
  PYTHONWARNINGS: ignore
  # Needed by a targetcli dependency.
  GI_TYPELIB_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/girepository-1.0
  # OVN runtime configuration
  OVN_LOGDIR: $SNAP_COMMON/log/ovn
  OVN_RUNDIR: $SNAP_COMMON/run/ovn
  OVN_SYSCONFDIR: $SNAP_COMMON/etc
  OVN_PKGDATADIR: $SNAP/usr/share/ovn
  OVN_BINDIR: $SNAP/usr/bin
  OVN_SBINDIR: $SNAP/usr/sbin
  # OVS runtime configuration
  OVS_LOGDIR: $SNAP_COMMON/log/openvswitch
  OVS_RUNDIR: $SNAP_COMMON/run/openvswitch
  OVS_SYSCONFDIR: $SNAP_COMMON/etc
  OVS_PKGDATADIR: $SNAP/usr/share/openvswitch
  OVS_BINDIR: $SNAP/usr/bin
  OVS_SBINDIR: $SNAP/usr/sbin

architectures:
  - build-on: amd64
  - build-on: arm64

system-usernames:
  snap_daemon: shared

layout:
  /usr/local/bin:
    bind: $SNAP/usr/local/bin
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/ceph:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/ceph
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/qemu:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/qemu
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio
  /usr/lib/libvirt:
    bind: $SNAP/usr/lib/libvirt
  /usr/share/libvirt:
    bind: $SNAP/usr/share/libvirt
  /etc/libvirt:
    bind: $SNAP/etc/libvirt
  /usr/share/qemu:
    bind: $SNAP/usr/share/qemu
  # For UEFI Support, bindmount the OVMF and AAVMF directories
  # appropriately. UEFI support is required for aarch64.
  /usr/share/OVMF:
    bind: $SNAP/usr/share/OVMF
  /usr/share/AAVMF:
    bind: $SNAP/usr/share/AAVMF
  # Libvirt has a hard-coded path for the apparmor directory.
  /etc/apparmor.d:
    bind: $SNAP_COMMON/etc/apparmor.d
  # os-brick has a hard-coded location for the iscsi initiator name file.
  /etc/iscsi:
    bind: $SNAP_COMMON/etc/iscsi
  # NOTE: /var/target is there since vhost-scsi module is a holder of target-core-mod (see
  # the content of /sys/module/target_core_mod/holders). This prevents rtslib from being
  # able to change the value of /sys/kernel/config/target/dbroot to /etc/target. At the same time,
  # rtslib saves configuration to /etc/target/saveconfig.json by default. Hence both bind mounts
  # point to the same target directory.
  # LIO: the preferred db_root directory documented both in the kernel target code and rtslib.
  /etc/target:
    bind: $SNAP_COMMON/etc/target
  # LIO: the default db_root directory documented both in the kernel target code and rtslib.
  /var/target:
    bind: $SNAP_COMMON/etc/target
  # LIO: Debian targetcli and rtslib carry a patch that changes the preferred dbroot from /etc/target
  # to /etc/rtslib-fb-target.
  /etc/rtslib-fb-target:
    bind: $SNAP_COMMON/etc/target
  /etc/lvm:
    bind: $SNAP_COMMON/etc/lvm

apps:
  # Nova
  nova-compute:
    command: bin/snap-openstack launch nova-compute
    after: [libvirtd]
    daemon: simple
    plugs:
      - network
      - network-bind
      - network-control
      - firewall-control
      - hardware-observe
      - kvm
      - microstack-support
      # Needs access to block devices so that blockdev --flushbufs works.
      - block-devices
  nova-api-metadata:
    command: bin/snap-openstack launch nova-api-metadata
    daemon: simple
    plugs:
      - network
      - network-bind
      - firewall-control
      - microstack-support

  # Neutron
  neutron-ovn-metadata-agent:
    command: bin/snap-openstack launch neutron-ovn-metadata-agent
    daemon: simple
    plugs:
      - network
      - network-bind
      - network-control
      - network-observe
      - microstack-support

  # Openvswitch
  ovs-vswitchd:
    command: bin/ovs-wrapper $SNAP/usr/share/openvswitch/scripts/ovs-ctl --no-ovsdb-server --no-monitor start
    stop-command: usr/share/openvswitch/scripts/ovs-ctl --no-ovsdb-server stop
    after: [ovsdb-server]
    daemon: forking
    plugs:
      - network
      - network-bind
      - network-control
      # NETLINK_NETFILTER SOCK_RAW sockets
      - firewall-control
      - openvswitch-support
      - process-control
      - system-trace
      - hardware-observe
      - hugepages-control
      - microstack-support
  ovsdb-server:
    command: usr/share/openvswitch/scripts/ovs-ctl --no-ovs-vswitchd --no-monitor start
    stop-command: usr/share/openvswitch/scripts/ovs-ctl --no-ovs-vswitchd stop
    daemon: forking
    plugs:
      - network
      - network-bind
      - network-control
      - openvswitch-support
      - process-control
      - system-trace
      - microstack-support

  # OVN
  ovn-controller:
    command: usr/share/ovn/scripts/ovn-ctl start_controller --no-monitor
    stop-command: usr/share/ovn/scripts/ovn-ctl stop_controller --no-monitor --restart
    daemon: forking
    plugs:
      - network
      - network-bind
      - network-control
      - openvswitch-support
      - process-control
      - system-trace
      - microstack-support
    after:
      - ovsdb-server
      - ovs-vswitchd

  # OVS/OVN cli tools
  ovn-appctl:
    command: usr/bin/ovn-appctl
    plugs:
      - network
      - network-bind
      - microstack-support
  ovn-trace:
    command: usr/bin/ovn-trace
    plugs:
      - network
      - network-bind
      - microstack-support
  ovn-detrace:
    command: usr/bin/ovn-detrace
    plugs:
      - network
      - network-bind
      - microstack-support
  ovn-nbctl:
    command: usr/bin/ovn-nbctl
    plugs:
      - network
      - network-bind
      - microstack-support
  ovn-sbctl:
    command: usr/bin/ovn-sbctl
    plugs:
      - network
      - network-bind
      - process-control
      - microstack-support

  ovs-vsctl:
    command: usr/bin/ovs-vsctl
    plugs:
      - network
      - process-control
      - microstack-support
  ovs-appctl:
    command: usr/bin/ovs-appctl
    plugs:
      - network
      - process-control
      - microstack-support
  ovs-ofctl:
    command: usr/bin/ovs-ofctl
    plugs:
      - network
      - process-control
      - microstack-support
  ovs-dpctl:
    command: usr/bin/ovs-dpctl
    plugs:
      - network
      - process-control
      - microstack-support

  # Libvirt/qemu
  libvirtd:
    command: usr/sbin/libvirtd --pid $SNAP_DATA/libvirt.pid --listen
    daemon: simple
    plugs:
      - network
      - network-bind
      - network-control
      - netlink-connector
      - netlink-audit
      - libvirt
      - opengl
      - raw-usb
      - hardware-observe
      - hugepages-control
      - kvm
      - kernel-module-observe
      - process-control
      - mount-observe
      - block-devices
      - microstack-support
    # Make sure KillMode=process is set in the resulting systemd unit instead of
    # the default KillMode=control-group to avoid the situation where stopping
    # libvirtd causes the forced power off scenario for all VMs; it also affects
    # snap refreshes as libvirtd is restarted in this case.
    # Removing the snap will still result in VMs being forcefully powered off which
    # is intended.
    stop-mode: sigterm

  virtlogd:
    command: usr/sbin/virtlogd --pid $SNAP_DATA/virtlogd.pid
    daemon: simple
    plugs:
      - network
      - network-bind
      - network-control
      - microstack-support
  virsh:
    command: usr/bin/virsh
    plugs:
      - network
      - microstack-support

#  cinder-volume:
#    command: bin/snap-openstack launch cinder-volume
#    daemon: simple
#    plugs:
#      - network
#      - network-bind
#      - mount-observe
#      - block-devices
#      # setpriority by LVM tools.
#      - process-control
#      - microstack-support
#    after:
#      - setup-lvm-loopdev
#
#  # Restores LIO kernel target configuration.
#  target:
#    command: bin/target-start
#    stop-command: bin/target-stop
#    daemon: oneshot
#    plugs:
#      - network
#      - network-bind
#      - mount-observe
#      - block-devices
#      - microstack-support
#    after:
#      - setup-lvm-loopdev
#    environment:
#      TARGETCLI_HOME: $SNAP_USER_COMMON/.targetcli
#
#  iscsid:
#    command: bin/iscsid-start
#    daemon: forking
#    plugs:
#      - network
#      - network-bind
#      # NETLINK_ISCSI protocol sockets
#      - network-control
#      - microstack-support
#      - block-devices
##     - process-control
#    after:
#      # Make sure iscsid is stopped before target configuration is cleaned up.
#      - target
#
#  setup-lvm-loopdev:
#    command: bin/setup-lvm-loopdev
#    daemon: oneshot
#    plugs:
#      - network
#      - block-devices
#      - mount-observe
#      # loop device control etc.
#      # LVM tools use setpriority to set it to -18 which is prohibited in the default snapd templates.
#      - process-control
#      - microstack-support

parts:
  # Add Ubuntu Cloud Archive sources.
  # Allows us to fetch things such as updated libvirt.
  uca-sources:
    plugin: nil
    build-packages:
      - ubuntu-cloud-keyring
      - software-properties-common
      - dpkg-dev  # We'll need to manipulate sources later.
      # The two dependencies below are added to avoid errors during
      # the build step of the openstack-projects part (see LP: #1864589).
      - python3-dev
      - python3-distutils
    override-pull: |
      add-apt-repository -s cloud-archive:xena
      apt-key update
      apt update
      snapcraftctl pull

  # OpenStack Python Projects, keyed off Keystone
  openstack-projects:
    plugin: python
    after:
      - uca-sources
      - libvirt
    constraints:
      - https://releases.openstack.org/constraints/upper/ussuri
    source: http://tarballs.opendev.org/openstack/nova/nova-stable-ussuri.tar.gz
    build-packages:
      - gcc
      - git
      - libffi-dev
      - libssl-dev
      - libxml2-dev
      - libxslt1-dev
      - python3-dev
      - libsystemd-dev
    stage-packages:
      - procps  # sysctl utility is used by Neutron agents.
      - conntrack
      - coreutils
      - haproxy
      - libglib2.0-0
      - libmagic1
      - libpython3.8
      - libssl-dev
      - libsystemd0
      - petname
      - python3
      - openssh-client
      - sg3-utils
      - openvswitch-switch
      - ovn-host
    python-packages:
      - wheel
      - libvirt-python
      - git+https://opendev.org/x/snap.openstack#egg=snap.openstack
      - neutron===16.2.0
      # Pin pip and setuptools to align with other parts
      - pip==20.0.2
      - setuptools==44.0.0
      - systemd-python
      # For debugging purposes.
      - rpdb
    build-environment: &python-build-environment
      - PIP_COMPILE: 'false'  # disable .pyc generation in pip
      - PYTHONDONTWRITEBYTECODE: 'false'  # disable .pyc generation by setup.py
      - SOURCE_DATE_EPOCH: '1591640328'
    organize:
       # Deal with alternatives usage in deb packages.
       usr/lib/openvswitch-switch/ovs-vswitchd: usr/sbin/ovs-vswitchd

  ovs-wrapper:
    source: ./snap/local/snap-wrappers/ovs
    plugin: dump
    organize:
      ovs-wrapper: bin/ovs-wrapper

  # Templates and other files to be overlaid over the snap.
  overlay:
    plugin: dump
    source: ./snap/local/snap-overlay

  # libvirt/qemu
  qemu:
    source: https://git.launchpad.net/ubuntu/+source/qemu
    source-type: git
    source-branch: ubuntu/focal-updates
    plugin: autotools
    after:
      - uca-sources
    build-environment:
      # Workaround for https://bugs.launchpad.net/snapcraft/+bug/1860766
      - LD_LIBRARY_PATH: $SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/ceph:$SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:$LD_LIBRARY_PATH
    stage-packages:
      - seabios
      - ipxe-qemu
      - freeglut3 # provides libglut.so.3
      - libnuma1
      - libspice-server1
      - libasound2
      - libasyncns0
      - libbluetooth3
      - libboost-iostreams1.67.0
      - libboost-random1.67.0
      - libboost-system1.67.0
      - libboost-thread1.67.0
      - libcaca0
      - libfdt1
      - libflac8
      - libglib2.0-0
      - libglu1-mesa
      - libiscsi7
      - libjpeg-turbo8
      - libnspr4
      - libnss3
      - libogg0
      - libopus0
      - libpixman-1-0
      - libpulse0
      - librados2
      - librbd1
      - libsdl1.2debian
      - libslang2
      - libsndfile1
      - libusb-1.0-0
      - libusbredirparser1
      - libvorbis0a
      - libvorbisenc2
      - libx11-6
      - libxi6
      - libxau6
      - libxcb1
      - libxdmcp6
      - libxext6
      - libpng16-16
      - libaio1
      - libasn1-8-heimdal
      - libbrotli1
      - libcurl3-gnutls
      - libgssapi3-heimdal
      - libhcrypto4-heimdal
      - libheimbase1-heimdal
      - libheimntlm0-heimdal
      - libhx509-5-heimdal
      - libkrb5-26-heimdal
      - libldap-2.4-2
      - libnghttp2-14
      - libpsl5
      - libroken18-heimdal
      - librtmp1
      - libssh-4
      - libwind0-heimdal
      # UEFI Support, required on arm64
      - on arm64:
        - qemu-efi-aarch64
        - qemu-efi-arm
      - on amd64:
        - ovmf
    build-packages:
      - acpica-tools
      - libaio-dev
      - libasound2-dev
      - libattr1-dev
      - libbluetooth-dev
      - libcap-dev
      - libcap-ng-dev
      - libcurl4-gnutls-dev
      - libfdt-dev
      - gnutls-dev
      - libiscsi-dev
      - libncurses5-dev
      - try: [libnuma-dev]
      - libpixman-1-dev
      - libpulse-dev
      - librados-dev
      - librbd-dev
      - libsasl2-dev
      - libsdl1.2-dev
      - try: [libspice-server-dev, libspice-protocol-dev]
      - libusb-1.0-0-dev
      - libusbredirparser-dev
      - linux-libc-dev
      - uuid-dev
      - xfslibs-dev
      - libjpeg-dev
      - zlib1g-dev
      - libpng-dev
      - wget
      - dpkg-dev
      - gcc
    autotools-configure-parameters:
      - --disable-blobs
      - --prefix=/usr
      - --localstatedir=/var/snap/$SNAPCRAFT_PROJECT_NAME/common
      - --sysconfdir=/var/snap/$SNAPCRAFT_PROJECT_NAME/common
      - --firmwarepath=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/share/seabios:/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/share/qemu:/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/ipxe/qemu
      - --disable-user
      - --disable-linux-user
      - --disable-bsd-user
      - --disable-vhost-user
      - --enable-system
      - --target-list=x86_64-softmmu,aarch64-softmmu
      - --disable-xen
    override-build: |
      dpkg-source --before-build .
      snapcraftctl build

  kvm-support:
    plugin: nil
    stage-packages:
    - try: [msr-tools]

  libvirt:
    source: https://git.launchpad.net/ubuntu/+source/libvirt
    source-type: git
    source-branch: ubuntu/focal-updates
    source-subdir: build-subdir
    after:
      - qemu
      - uca-sources
    plugin: autotools
    build-packages:
    - libxml2-dev
    - libxml-libxml-perl
    - libcurl4-gnutls-dev
    - libncurses5-dev
    - libreadline-dev
    - zlib1g-dev
    - libgcrypt20-dev
    - libgnutls28-dev
    - libyajl-dev
    - libpcap0.8-dev
    - libaudit-dev
    - libdevmapper-dev
    - libpciaccess-dev
    - libnl-3-dev
    - libnl-route-3-dev
    - libxml2-utils
    - uuid-dev
    - try: [libnuma-dev]
    - python-all
    - python-six
    - python3-docutils
    - wget
    - dpkg-dev
    - xsltproc
    - libapparmor-dev
    - rsync
    - open-iscsi
    stage-packages:
    - dmidecode
    - dnsmasq
    - iptables
    - genisoimage
    - libxml2
    - libyajl2
    - try: [libnuma1]
    - libcurl3-gnutls
    - libpcap0.8
    - libpciaccess0
    # libvirt uses the pm-is-supported tool.
    - pm-utils
    - ebtables
    - apparmor
    - libapparmor1
    autotools-configure-parameters:
    - --with-qemu
    - --without-bhyve
    - --without-xen
    - --without-openvz
    - --without-vmware
    - --without-xenapi
    - --without-esx
    - --without-hyperv
    - --without-lxc
    - --without-vz
    - --without-vbox
    - --without-uml
    - --without-sasl
    - --without-storage-iscsi
    - --without-storage-sheepdog
    - --without-storage-rbd
    - --without-storage-lvm
    - --without-selinux
    - --with-chrdev-lock-files=/run/lock
    - --with-storage-iscsi
    # TODO(dmitriis): re-enable once a workaround is found for subprocess' RPATH handling.
    # - --with-apparmor
    - --without-apparmor
    # NOTE: the install prefix will be different from the actual location on snap installation.
    - --prefix=/usr
    - --bindir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/bin
    - --sbindir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/sbin
    - --libexecdir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/libexec
    - --libdir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib
    - --includedir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/include
    - --oldincludedir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/include
    - --localstatedir=/var/snap/$SNAPCRAFT_PROJECT_NAME/common
    - --sysconfdir=/var/snap/$SNAPCRAFT_PROJECT_NAME/common/etc/
    - DNSMASQ=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/sbin/dnsmasq
    - DMIDECODE=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/sbin/dmidecode
    - OVSVSCTL=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/local/bin/ovs-vsctl
    - IPTABLES_PATH=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/sbin/iptables-legacy
    - IP6TABLES_PATH=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/sbin/ip6tables-legacy
    - EBTABLES_PATH=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/sbin/ebtables-legacy
    build-environment:
      # Libraries under /snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/x86_64-linux-gnu are not added to the
      # runpath by default. This is OK for parent processes which get LD_LIBRARY_PATH set properly but not
      # for the child processes they spawn since the environment variables are not passed down to children by default after execve(2).
      # `readelf -d /snap/microstack/current/usr/libexec/virt-aa-helper` should return something like:
      # (RUNPATH)            Library runpath: [/snap/microstack/current/usr/lib:/snap/microstack/current/usr/lib/x86_64-linux-gnu:...]
      - LDFLAGS: '$LDFLAGS -Wl,-rpath=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib -Wl,-rpath=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/$SNAPCRAFT_ARCH_TRIPLET -Wl,-rpath=/snap/$SNAPCRAFT_PROJECT_NAME/current/lib -Wl,-rpath=/lib/$SNAPCRAFT_ARCH_TRIPLET -Wl,-rpath=/lib/'
    override-build: |
      dpkg-source --before-build .
      logger `echo -n $PWD`
      # Prevent libvirt from attempting to run setgroups
      echo "

      #undef HAVE_SETGROUPS
      #undef HAVE_SETEUID
      " >> config-post.h

      # See https://bugs.launchpad.net/snapcraft/+bug/1882255
      mkdir build-subdir
      cd build-subdir
      ../autogen.sh

      echo "#!/bin/sh
      exit 0
      " >> autogen.sh
      chmod +x autogen.sh
      ln -s ../configure configure
      cd ..
      # end of a workaround for LP: #1882255
      # Build
      snapcraftctl build

      rsync --remove-source-files -arhvP $SNAPCRAFT_PART_INSTALL/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/* $SNAPCRAFT_PART_INSTALL/usr/
      rm -rf $SNAPCRAFT_PART_INSTALL/snap/$SNAPCRAFT_PROJECT_NAME/current/usr

      # Copy the generated apparmor template into the install dir
      # it will be used by libvirt at runtime.
      mkdir -p $SNAPCRAFT_PART_INSTALL/etc/apparmor.d/libvirt/
      mkdir -p $SNAPCRAFT_PART_INSTALL/etc/apparmor.d/abstractions
      cp $SNAPCRAFT_PART_BUILD/src/security/apparmor/TEMPLATE.qemu $SNAPCRAFT_PART_INSTALL/etc/apparmor.d/libvirt/TEMPLATE.qemu
      cp $SNAPCRAFT_PART_BUILD/src/security/apparmor/libvirt-qemu $SNAPCRAFT_PART_INSTALL/etc/apparmor.d/abstractions/libvirt-qemu
      # While LXC is not used, the AppArmor code errors out if the template for LXC is not there.
      cp $SNAPCRAFT_PART_BUILD/src/security/apparmor/TEMPLATE.lxc $SNAPCRAFT_PART_INSTALL/etc/apparmor.d/libvirt/TEMPLATE.lxc
      cp $SNAPCRAFT_PART_BUILD/src/security/apparmor/libvirt-lxc $SNAPCRAFT_PART_INSTALL/etc/apparmor.d/abstractions/libvirt-lxc
